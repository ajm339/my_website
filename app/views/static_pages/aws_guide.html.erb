<% provide(:title, 'alexjmeyers aws guide') %>
<div class="row">
  <div class="large-12 columns">
    <h1>An Idiot's Guide to Amazon Web Services</h1>
  </div>
</div>

<div class="row">
  <div class="large-12 columns">
    <p>This page is dedicated to a guide I developed for helping new developers learn about <a href="http://aws.amazon.com/" target="_blank">Amazon Web Services</a>.</p>

    <h3>So what is Amazon Web Services, and why do you need it?</h3>

    <p>Amazon Web Services (AWS) is one of the leaders of Cloud Computing in the industry today.  It is a platform that provides various types of virtual servers that offer different solutions for hosting applications with unique services.</p>
    <p>A common theme that many people (including myself) have encountered during a college education, is that the class teaches a language and concept, but does not thoroughly demonstrate how to utilize the learning in an external application.  For example, at Cornell University, I took CS/INFO 1300 and CS/INFO 2300 and made a lot of great PHP applications. Once I completed my app, the school had set up a service for dragging and dropping our projects to the local server so that the professor could grade the project.</p>
    <p>While this is great for a simple class and helps to facilitate teaching high-level programming concepts, this created a huge issue for when I wanted to build PHP apps outside of class, because the reality is, standard servers are not neat little drag-and-drop services.</p>
    <p>If you take the time to do some research, you will find that one of the easiest solutions for deploying an application <i>in the real world</i> is a platform called <a href="http://www.heroku.com" target="_blank">Heroku</a>.  Heroku has built a fantastic service that is a robust option for apps built in well-known frameworks such as <a href="http://rubyonrails.org/" target="_blank">Ruby on Rails</a>, <a href="http://nodejs.org/" target="_blank">Node.js</a>, <a href="https://www.playframework.com/" target="_blank">Play</a>, and <a href="https://www.djangoproject.com/" target="_blank">Django</a> to name a few.  Heroku is also great because it removes a lot of the complicated configuration out of Ops and lets someone boot an application by simply using Git to push to a Heroku repository.  This service is great for someone who is learning to build web applications and does not want to have to deal with the complications of DevOps; however, when it comes time to scale an application in an efficient and cost effective manner, Heroku lacks in its ability to provide deeper customization, and it is fairly expensive.</p>

    <h3>Ok, let's get to the point...</h3>

    <p>Overall, there are many intricate parts to DevOps and it is a massive undertaking.  I personally like learning new languages by following a step-by-step tutorial where I build a neat app, and the tutorial has great explanations for why it does this and not that etc (such as Michael Hartl's <a href="http://www.railstutorial.org/">Rails Tutorial</a>).  I searched far and wide, but I could not find a great tutorial for learning DevOps.  I spent 2 months of my summer vacation pulling my hair out trying to learn how to harness the power of AWS after long days at my summer internship.  My struggles (and the great documentation of Hartil's tutorial) inspired me to give back to the open source community with a tutorial of my own for learning DevOps on AWS.</p>
    <p>This tutorial would not have been possible without some of the great advice I received from <a href="http://parkermoore.de/" target="_blank">Parker Moore</a> at <a href="http://vsco.co/" target="_blank">VSCO</a> and <a href="http://www.linkedin.com/in/gregoryscallan" target="_blank">Greg Scallan</a> at <a href="https://flipboard.com/" target="_blank">Flipboard</a>.  With their help and many late nights, I finally figured out how to build a multilayer application hosted on AWS.  All of this learning put together comes in the form of the tutorial below.  This tutorial strives to explain what each piece of the puzzle is, provide additional links for more information, and then provide step-by-step how to utilize the AWS service.</p>
    <p>Notes: </p><ol><li>This tutorial is optimized for someone building a Rails Application with PostgreSQL, but its concepts can be transferred to any other framework/language.</li><li>This tutorial surrounds using Amazon's <a href="http://aws.amazon.com/opsworks/" target="_blank">OpsWorks</a> service for automation.  Opsworks is based on <a href="http://www.getchef.com/" target="_blank">Chef's</a> technology, so one could conceivably exchange out Opsworks for Chef.  <a href="http://puppetlabs.com/" target="_blank">Puppet</a> is also another automation tool that is widely used with AWS and other Cloud Computing platforms.</li><li>Find the cookbooks needed for this tutorial <a href="https://github.com/ajm339/mycookbooks" target="_blank">here</a>.</li></ol>

    <div class="show-for-medium-up">
        <iframe src='https://s3-us-west-2.amazonaws.com/alexjmeyers/AWS+Guide.pdf' style="width:718px; height:1000px;" frameborder="0"></iframe>
    </div>
    <div class="hide-for-medium-up">
        <%= link_to 'Download my Guide', 'https://s3-us-west-2.amazonaws.com/alexjmeyers/AWS+Guide.pdf', :target=> '_blank' %>
    </div>

  </div>
</div>